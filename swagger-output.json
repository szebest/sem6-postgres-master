{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/users/": {
      "get": {
        "summary": "Only database admin can access this route",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "The specific user with this id in params or database admin can access this route",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the user to get"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "The specific user with this id in params or database admin can access this route",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the user to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "The specific user with this id in params or database admin can access this route",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the user to patch"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "string",
                  "type": "string",
                  "description": "Max 32 characters"
                },
                "surname": {
                  "example": "string",
                  "type": "string",
                  "description": "Max 32 characters"
                },
                "login": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "password": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "email": {
                  "example": "string",
                  "type": "string"
                },
                "phone_number": {
                  "example": "string",
                  "type": "string",
                  "description": "Precise 9 numbers"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/admin/{id}": {
      "patch": {
        "summary": "Only database admin can access this route, used for making an regular user a parking owner",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the user to patch"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "string",
                  "type": "string",
                  "description": "Max 32 characters"
                },
                "surname": {
                  "example": "string",
                  "type": "string",
                  "description": "Max 32 characters"
                },
                "login": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "password": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "email": {
                  "example": "string",
                  "type": "string"
                },
                "phone_number": {
                  "example": "string",
                  "type": "string",
                  "description": "Precise 9 numbers"
                },
                "user_type": {
                  "example": "3",
                  "type": "integer",
                  "description": "Number from 1 to 3. 1 is regular user, 2 is parking owner, 3 is administrator"
                },
                "servers": {
                  "example": "[1]",
                  "type": "array",
                  "description": "Array of ids of servers to connect to the user. Is set only when the user_type is provided and the value is >= 2",
                  "items": {
                    "id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/register": {
      "post": {
        "summary": "Used for registering a new user",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "surname",
                "login",
                "password",
                "email",
                "phone_number"
              ],
              "properties": {
                "name": {
                  "example": "string",
                  "type": "string",
                  "description": "Max 32 characters"
                },
                "surname": {
                  "example": "string",
                  "type": "string",
                  "description": "Max 32 characters"
                },
                "login": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "password": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "email": {
                  "example": "string",
                  "type": "string"
                },
                "phone_number": {
                  "example": "string",
                  "type": "string",
                  "description": "Precise 9 numbers"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "summary": "Used for logging in",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "login": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                },
                "password": {
                  "example": "string",
                  "type": "string",
                  "description": "Min 5 characters and max 32 characters"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/users/refresh": {
      "post": {
        "summary": "Used for refreshing an access token with an provided refresh token. Use the body to pass the refresh token idk why the authorization header shows up",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "refresh_token"
              ],
              "properties": {
                "refresh_token": {
                  "example": "string",
                  "type": "string",
                  "description": "Refresh token"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/slaves/": {
      "get": {
        "summary": "Used for getting all data about available parkings",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Only database admin can access this route, used for creating a new parking",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "server_url": {
                  "example": "string",
                  "type": "string",
                  "description": "The url of the parking backend"
                },
                "parking_address": {
                  "example": "string",
                  "type": "string",
                  "description": "The address of the parking"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/slaves/ownerParkings": {
      "get": {
        "summary": "Used for getting all owner parkings. User has to be at least an server owner",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/slaves/{id}": {
      "get": {
        "summary": "Used for getting data about an specific available parking",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the parking to get"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Only database admin can access this route",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "integer"
          },
          {
            "name": "id",
            "in": "params",
            "required": true,
            "type": "string",
            "description": "Id of the parking to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Only database admin can access this route",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the parking to update"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Access token",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "server_url": {
                  "example": "string",
                  "type": "string",
                  "description": "The url of the parking backend"
                },
                "parking_address": {
                  "example": "string",
                  "type": "string",
                  "description": "The address of the parking"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}